\begin{definition}[Traversals for simply-typed lambda-terms]
\label{def:traversal} The set $\travset(M)$ of \defname{traversals}
over $\tau(M)$ is defined by induction over the rules of Table
\ref{tab:trav_rules}. A traversal that cannot be extended by any
rule is said to be \emph{maximal}.
\end{definition}

\begin{FramedTable}
\noindent {\bf Initialization rules}
\begin{itemize}[]
\item\rulenamet{Empty} $\epsilon \in \travset(M)$.
\item\rulenamet{Root} The sequence consisting of a single occurrence of $\tau(M)$'s root is a traversal.
\end{itemize}

\noindent {\bf Structural rules}
\begin{itemize}[]
    \item \rulenamet{Lam} If $t \cdot \lambda \overline{\xi}$ is a traversal then so is
        $t \cdot \lambda \overline{\xi} \cdot n$ where $n$
        denotes $\lambda \overline{\xi}$'s child in $\tau(M)$ and:
        \begin{compactitem}
            \item If $n \in \INodes_@ \union \INodes_\Sigma$ then it has no justifier;
            \item if  $n \in \INodes_{\sf var}\setminus \INodes_{\sf fv}$ then it points to the only occurrence\footnote{Prop.~\ref{prop:pviewtrav_is_path} will show that P-views
            are paths in the tree thus $n$'s enabler occurs
            exactly once in the P-view.} of its binder in
            $\pview{t\cdot \lambda \overline{\xi}}$;
            \item if  $n \in \INodes_{\sf fv}$ then it points
            to the only occurrence of the root $\theroot$ in
            $\pview{t \cdot \lambda \overline{\xi}}$.
        \end{compactitem}
    \item \rulenamet{App} If $t \cdot @$ is a traversal then so is \Pstr[0.4cm]{t \cdot (m) @  \cdot (n-m,40:0) n}.
\end{itemize}

\emph{\bf Input-variable rules}
\begin{itemize}[]
\item \rulenamet{InputVar} If $t$ is a traversal where $t^\omega \in \INodes_{\sf var}^{\theroot\enable} \union \LNodes_\lambda^{\theroot\enable}$
and $x$ is an occurrence of a variable node in $\oview{t}$ then
so is $t \cdot n$ for every child $\lambda$-node $n$ of $x$, $n$
pointing to $x$.



\item \rulenamet{InputValue} If $t_1
\cdot x \cdot t_2$ is a traversal with pending node $x \in
\INodes_{\sf var}^{\theroot\enable}$ then so is \Pstr[0.5cm]{t_1 \cdot
(x){x} \cdot t_2 \cdot (xv-x,38:v){v_x} } for all $v \in
\mathcal{D}$.
\end{itemize}

\emph{\bf Copy-cat rules}
\begin{itemize}[]
\item\rulenamet{Var}
If \Pstr[0.5cm]{t \cdot (n){n} \cdot (lx){\lambda \overline{x}}
    \ldots (x-lx,50:i){x_i} } is a traversal where $x_i \in
    \INodes_{\sf var}^{@\enable}$ then so is \Pstr[0.5cm]{ t \cdot
(n){n} \cdot (lx){\lambda \overline{x}}  \ldots (x-lx,30:i){x_i}
    \cdot (letai-n,40:i){\lambda \overline{\eta_i}}
     }.

\item\rulenamet{Value}
  If \Pstr{t \cdot (m){m} \cdot (n){n}  \ldots
(vn-n,60:v){v}_{n} } is a traversal where $n\in \INodes$ then so is
\Pstr[0.6cm]{t \cdot (m){m} \cdot (n){n} \ldots
(vn-n,60:v){v}_{n} \cdot (vm-m,45:v){v}_m}.
\end{itemize}
\caption[Traversal rules for the simply-typed lambda calculus.]{Traversal rules for the simply-typed lambda calculus.}
 \label{tab:trav_rules}
\end{FramedTable}
